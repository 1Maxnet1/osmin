diff --git a/libosmscout-client-qt/include/osmscoutclientqt/Settings.h b/libosmscout-client-qt/include/osmscoutclientqt/Settings.h
index 34f145591..9e69d5413 100644
--- a/libosmscout-client-qt/include/osmscoutclientqt/Settings.h
+++ b/libosmscout-client-qt/include/osmscoutclientqt/Settings.h
@@ -66,6 +66,7 @@ class OSMSCOUT_CLIENT_QT_API Settings: public QObject
   Q_PROPERTY(QString  fontName    READ GetFontName            WRITE SetFontName     NOTIFY FontNameChanged)
   Q_PROPERTY(double   fontSize    READ GetFontSize            WRITE SetFontSize     NOTIFY FontSizeChanged)
   Q_PROPERTY(bool     showAltLanguage READ GetShowAltLanguage WRITE SetShowAltLanguage NOTIFY ShowAltLanguageChanged)
+  Q_PROPERTY(int      debugLevel  READ GetDebugLevel          WRITE SetDebugLevel   NOTIFY DebugLevelChanged)
   /// metrics or imperial
   Q_PROPERTY(QString  units       READ GetUnits               WRITE SetUnits        NOTIFY UnitsChanged)
   Q_PROPERTY(QString  voiceLookupDirectory READ GetVoiceLookupDirectory WRITE SetVoiceLookupDirectory NOTIFY VoiceLookupDirectoryChanged)
@@ -85,6 +86,7 @@ signals:
   void FontNameChanged(const QString fontName);
   void FontSizeChanged(double fontSize);
   void ShowAltLanguageChanged(bool showAltLanguage);
+  void DebugLevelChanged(int debugLevel);
   void UnitsChanged(const QString units);
 
 private:
@@ -156,6 +158,9 @@ public:
   bool GetShowAltLanguage() const;
   void SetShowAltLanguage(bool showAltLanguage);
 
+  int GetDebugLevel() const;
+  void SetDebugLevel(int debug);
+
   const QString GetHttpCacheDir() const;
 
   const QByteArray GetCookieData() const;
@@ -201,6 +206,7 @@ class OSMSCOUT_CLIENT_QT_API QmlSettings: public QObject{
   Q_PROPERTY(QString  fontName    READ GetFontName            WRITE SetFontName     NOTIFY FontNameChanged)
   Q_PROPERTY(double   fontSize    READ GetFontSize            WRITE SetFontSize     NOTIFY FontSizeChanged)
   Q_PROPERTY(bool     showAltLanguage READ GetShowAltLanguage WRITE SetShowAltLanguage NOTIFY ShowAltLanguageChanged)
+  Q_PROPERTY(int      debugLevel  READ GetDebugLevel          WRITE SetDebugLevel   NOTIFY DebugLevelChanged)
   /// metrics or imperial
   Q_PROPERTY(QString  units       READ GetUnits               WRITE SetUnits        NOTIFY UnitsChanged)
 
@@ -217,6 +223,7 @@ signals:
   void FontNameChanged(const QString fontName);
   void FontSizeChanged(double fontSize);
   void ShowAltLanguageChanged(bool showAltLanguage);
+  void DebugLevelChanged(int debugLevel);
   void UnitsChanged(const QString units);
 
 public:
@@ -255,6 +262,9 @@ public:
   bool GetShowAltLanguage() const;
   void SetShowAltLanguage(bool showAltLanguage);
 
+  int GetDebugLevel() const;
+  void SetDebugLevel(int debugLevel);
+
   QString GetUnits() const;
   void SetUnits(const QString units);
 };
diff --git a/libosmscout-client-qt/src/osmscoutclientqt/PlaneMapRenderer.cpp b/libosmscout-client-qt/src/osmscoutclientqt/PlaneMapRenderer.cpp
index 223940bf3..02488119c 100644
--- a/libosmscout-client-qt/src/osmscoutclientqt/PlaneMapRenderer.cpp
+++ b/libosmscout-client-qt/src/osmscoutclientqt/PlaneMapRenderer.cpp
@@ -330,8 +330,8 @@ void PlaneMapRenderer::DrawMap()
     drawParameter.SetPatternMode(osmscout::MapParameter::PatternMode::Scalable);
     drawParameter.SetIconPaths(paths);
     drawParameter.SetPatternPaths(paths);
-    drawParameter.SetDebugData(false);
-    drawParameter.SetDebugPerformance(true);
+    drawParameter.SetDebugData((settings->GetDebugLevel() > 1));
+    drawParameter.SetDebugPerformance((settings->GetDebugLevel() > 0));
     // We want to get notified, if we have more than 1000 objects from a certain type (=> move type rendering to a higher zoom level?)
     drawParameter.SetWarningObjectCountLimit(1000);
     // We want to get notified, if we have more than 20000 coords from a certain type (=> move type rendering to a higher zoom level?)
diff --git a/libosmscout-client-qt/src/osmscoutclientqt/Settings.cpp b/libosmscout-client-qt/src/osmscoutclientqt/Settings.cpp
index c6401d605..76def961d 100644
--- a/libosmscout-client-qt/src/osmscoutclientqt/Settings.cpp
+++ b/libosmscout-client-qt/src/osmscoutclientqt/Settings.cpp
@@ -339,6 +339,18 @@ void Settings::SetShowAltLanguage(bool showAltLanguage)
   }
 }
 
+int Settings::GetDebugLevel() const
+{
+  return storage->value("OSMScoutLib/Rendering/DebugLevel", 0).toInt();
+}
+void Settings::SetDebugLevel(int debugLevel)
+{
+  if (GetDebugLevel()!=debugLevel){
+    storage->setValue("OSMScoutLib/Rendering/DebugLevel", debugLevel);
+    emit DebugLevelChanged(debugLevel);
+  }
+}
+
 const QString Settings::GetHttpCacheDir() const
 {
   QString cacheLocation = QStandardPaths::writableLocation(QStandardPaths::CacheLocation);
@@ -499,6 +511,14 @@ void QmlSettings::SetShowAltLanguage(bool showAltLanguage)
 {
     settings->SetShowAltLanguage(showAltLanguage);
 }
+int QmlSettings::GetDebugLevel() const
+{
+    return settings->GetDebugLevel();
+}
+void QmlSettings::SetDebugLevel(int debugLevel)
+{
+    settings->SetDebugLevel(debugLevel);
+}
 QString QmlSettings::GetUnits() const
 {
     return settings->GetUnits();
diff --git a/libosmscout-client-qt/src/osmscoutclientqt/TiledMapRenderer.cpp b/libosmscout-client-qt/src/osmscoutclientqt/TiledMapRenderer.cpp
index 2499c39bb..f79bb0424 100644
--- a/libosmscout-client-qt/src/osmscoutclientqt/TiledMapRenderer.cpp
+++ b/libosmscout-client-qt/src/osmscoutclientqt/TiledMapRenderer.cpp
@@ -425,8 +425,8 @@ void TiledMapRenderer::onLoadJobFinished(QMap<QString,QMap<osmscout::TileKey,osm
     drawParameter.SetPatternMode(osmscout::MapParameter::PatternMode::Scalable);
     drawParameter.SetIconPaths(paths);
     drawParameter.SetPatternPaths(paths);
-    drawParameter.SetDebugData(false);
-    drawParameter.SetDebugPerformance(true);
+    drawParameter.SetDebugData((settings->GetDebugLevel() > 1));
+    drawParameter.SetDebugPerformance((settings->GetDebugLevel() > 0));
 
     // optimize process can reduce number of nodes before rendering
     // it helps for slow renderer backend, but it cost some cpu
