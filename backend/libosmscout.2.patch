diff --git a/libosmscout-map/src/osmscoutmap/MapPainter.cpp b/libosmscout-map/src/osmscoutmap/MapPainter.cpp
index a3cd91993..93ca51a17 100644
--- a/libosmscout-map/src/osmscoutmap/MapPainter.cpp
+++ b/libosmscout-map/src/osmscoutmap/MapPainter.cpp
@@ -294,12 +294,12 @@ namespace osmscout {
       if (type) {
         if (parameter.GetWarningObjectCountLimit()>0 &&
             statistic.objectCount>parameter.GetWarningObjectCountLimit()) {
-          log.Warn() << "Type : " << type->GetName() << " has " << statistic.objectCount << " objects (performance limit: " << parameter.GetWarningObjectCountLimit() << ")";
+          log.Debug() << "Type : " << type->GetName() << " has " << statistic.objectCount << " objects (performance limit: " << parameter.GetWarningObjectCountLimit() << ")";
         }
 
         if (parameter.GetWarningCoordCountLimit()>0 &&
             statistic.coordCount>parameter.GetWarningCoordCountLimit()) {
-          log.Warn() << "Type : " << type->GetName() << " has " << statistic.coordCount << " coords (performance limit: " << parameter.GetWarningCoordCountLimit() << ")";
+          log.Debug() << "Type : " << type->GetName() << " has " << statistic.coordCount << " coords (performance limit: " << parameter.GetWarningCoordCountLimit() << ")";
         }
       }
     }
diff --git a/libosmscout/include/osmscout/DataFile.h b/libosmscout/include/osmscout/DataFile.h
index d359811d2..332202ecb 100644
--- a/libosmscout/include/osmscout/DataFile.h
+++ b/libosmscout/include/osmscout/DataFile.h
@@ -397,13 +397,13 @@ namespace osmscout {
 
     size_t hitRate=inBoxCount*100/size;
     if (size>100 && hitRate<50) {
-      log.Warn() << "Bounding box hit rate for file " << datafile << " is only " << hitRate << "% (" << inBoxCount << "/" << size << ")";
+      log.Debug() << "Bounding box hit rate for file " << datafile << " is only " << hitRate << "% (" << inBoxCount << "/" << size << ")";
       /*
       for (const auto& missRateType: missRateTypes) {
-        log.Warn() << "- " << missRateType.first << " " << missRateType.second;
+        log.Debug() << "- " << missRateType.first << " " << missRateType.second;
       }
       for (const auto& hitRateType: hitRateTypes) {
-        log.Warn() << "+ " << hitRateType.first << " " << hitRateType.second;
+        log.Debug() << "+ " << hitRateType.first << " " << hitRateType.second;
       }*/
     }
 
